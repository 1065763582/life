<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzq.life.mapper.BasCatalogMapper">
  <resultMap id="BaseResultMap" type="com.lzq.life.entity.BasCatalog">
    
    <!-- 代码 -->
    <id column="catalog_id" jdbcType="BIGINT" property="catalogId" />
    
    <!-- 父级代码 -->
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    
    <!-- 名称 -->
    <result column="catalog_name" jdbcType="VARCHAR" property="catalogName" />
    
    <!-- 代码层级，从0开始 -->
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    catalog_id, parent_id, `catalog_name`, `level`
  </sql>
  <select id="selectByExample" parameterType="com.lzq.life.entity.BasCatalogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bas_catalog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bas_catalog
    where catalog_id = #{catalogId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bas_catalog
    where catalog_id = #{catalogId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzq.life.entity.BasCatalogExample">
    delete from bas_catalog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert">
    insert into bas_catalog (catalog_id, parent_id, `catalog_name`, 
      `level`)
    values (#{catalogId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{catalogName,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective">
    insert into bas_catalog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="catalogId != null">
        catalog_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="catalogName != null">
        `catalog_name`,
      </if>
      <if test="level != null">
        `level`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="catalogId != null">
        #{catalogId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="catalogName != null">
        #{catalogName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update bas_catalog
    <set>
      <if test="record.catalogId != null">
        catalog_id = #{record.catalogId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.catalogName != null">
        `catalog_name` = #{record.catalogName,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bas_catalog
    set catalog_id = #{record.catalogId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      `catalog_name` = #{record.catalogName,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective">
    update bas_catalog
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="catalogName != null">
        `catalog_name` = #{catalogName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where catalog_id = #{catalogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey">
    update bas_catalog
    set parent_id = #{parentId,jdbcType=BIGINT},
      `catalog_name` = #{catalogName,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER}
    where catalog_id = #{catalogId,jdbcType=BIGINT}
  </update>
</mapper>